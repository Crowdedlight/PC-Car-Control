<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="rdoText.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEBAAAAAAIABoBAAARgAAABgYAAAAACAAiAkAAK4EAAAgIAAAAAAgAKgQAAA2DgAAIA0AAAAA
        IADcBgAA3h4AACgAAAAQAAAAIAAAAAEAIAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPT05NgAAABAAAAACAAAAAgAA
        AAAAAAAAAAAAAAAAAAEYHh4qAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAASEREuHV/gP8AAAD1AAIG8QAA
        AOIAAAC7AAAAWAAAAAA8REhAVV1g/w8TFf8FBwj/AAED/wEDBf8CBAn/AQIF/2yCiv9pd3v/BAgQ/wAE
        CP8BBQn/AAEC/wgMDv8qLy/tJCs1sxIdJP8AAgT/AwsW/wcPGf8DDhv/AQsY/wAHEf8ECAv/AAQG/wAA
        AP8AChD/AQcG/woUFv8BAgP/GyUuiyQkI+tDQkL/VVVW/05PTv8QDhD/FhIS/wkIB/8tKib/WFJH/31z
        Yv+xqJv/pZmH/2FbbP9CPnL/ICEx/56lpSV/e3STaXNtuDQzMv8YFRP/JSEg/zIxL/9MSkb/Vk5H/42G
        ef+YlYv/i4qF/2NkZP9cZ2m6XHd3OgAAAAAAAAAAIScpdVJaV7NNXFxTPUdEljo7ONKEgXj6vLGc/6mZ
        hv+lk4T/fXRrxgAcHAkAAAAAAAAAAAAAAAAAAAAAAAAAAB8pKRlSUksiW1tVJ0FBQSsjLCwdN0lJDklV
        VRVOWVkXQFBAEAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAP//
        AAD//wAA//8AAP//AAD/AwAAgAAAAAAAAAAAAQAAAAcAAKA/AAD//wAA//8AAP//AAD//wAA//8AACgA
        AAAYAAAAMAAAAAEAIAAAAAAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJycnNjg2jQkLCYcAAAAgAAAABwAA
        AAkAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFyMjFhkZFlsAAAAvAAAAIAAAAB0AAAARAAAABgAA
        AAoAAAAPAAAAFAAAABIlJSeYiYuM/1ZjZv8AAAD8AAMH8AABBvQAAADsAAAA2AAAAL4AAACGAAAAOyQx
        MRWqqqoDNz9BeUFCQvoNEBHwAgUG4QECBNkAAAG1AAIDkwACA58BAwauAQMHvQAAALlIVlvxh5qh/2d3
        fv8BAwb/BAsV/wEHC/8AAwj/AAED/wABAv8CAwX/AwUF8j9ISLFqcXEkOEZMu1Rmb/8PFBn/AAAA/wEH
        Df8FDRX/BQ0V/wUOF/8CCxj/AgsZ/wACCP8xP0T/iJmd/y4wMv8AAAD/AQIE/wEBAv8BAgP/AAEB/wAA
        AP8CBQj/BQsS/05YW3krMjqsAwgQ/xMbIf8AAAH/AAYN/wMKE/8HDRT/AwsZ/wILFv8BChb/AAcR/wAE
        DP8BAwT/Bw0Q/wQFBP8EBQT/BwsM/woSFv8DBQX/CBUX/woUFv8DBwf/CxAW+DtETTgqLzPTHBkY/yMj
        I/8qKiv/LS4y/x8iJf8FBgv/DAsR/wkHCv8CAwX/DgwM/xgWFP8oJyP/RDw0/0tHPP9fXVT/dm9m/2xn
        WP9CPz7/KzBW/ywzRv8cJC7/KCosvWZzcxR5dG+Vem9n/29mX/9ZUU3/VE5L/0lGQf80My7/OTYy/0RD
        Qf83OTj/OTgy/2BZUP9vaFv/f3do/4d+b/9ya2D/bW9p/0ZCO/+mmIn/pJmb/3l4hP9kZ4HFcHmGUL+/
        vwRtc20qZ3Nsb1RdW7g4ODbXJSIg7x8dGv0oJCL/JB8e/zIxL/9MSkb/Vk9I/1hPRv95cWP/pZ2P/46M
        g/+Mjon5kpKQ6E9UVeFRWl2yaH19YFhwcCAAAAAAAAAAAAAAAAAMFRtULTMzeC82M5dKXV03SE5OfDg3
        M9YvLSnnODQy8FxYUf2Kg3X/jn9t/4t9bP+Ofm//koN0/pGJfs+7u7h0wtThO5WuuykAAFUDAAAAAAAA
        AAAAAAAAAAAAAAAAAAANFhmNO0VCk1BWT5VWWFSDV19ZhD5CP7YuMS+xREhEh4eJf4CXlIaRiYR3moaB
        dJqDfHKUgXdtfF5aVTYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A//n/AP/wAwDAAAAAgAABAAAAAQAAAAEAAAADAMAA
        HwDYAf8AAAf/AP///wD///8A////AP///wD///8A////AP///wAoAAAAIAAAAEAAAAABACAAAAAAAAAg
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKydHPT07bAADA2AAAAAgAAAABAAA
        AAUAAAAHAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACpVKgYWFhYjAAAABwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOVJOTcZ6fXzsIyss4AAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>